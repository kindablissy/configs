set -g mouse on
unbind-key C-b
set-option -g prefix M-m
bind-key M-m send-prefix
set-option -g history-limit 30000
set -g base-index 1
setw -g pane-base-index 1

# Movement keys like vim for panes
bind -r -T prefix h select-pane -L
bind -r -T prefix j select-pane -D
bind -r -T prefix k select-pane -U
bind -r -T prefix l select-pane -R

# so, after the copy keys are pressed, "pbcopy" copies those to the system too.
bind -T copy-mode C-w send-keys -X copy-pipe "xclip -selection clipboard"
bind -T copy-mode M-w send-keys -X copy-pipe "xclip -selection clipboard"
bind -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe "xclip -selection clipboard"
bind -T copy-mode C-k                  send-keys -X copy-pipe-end-of-line "xclip -selection clipboard"
bind -T copy-mode DoubleClick1Pane     select-pane \; send-keys -X select-word \; run-shell -d 0.3 \; send-keys -X copy-pipe "xclip -selection clipboard"
bind -T copy-mode TripleClick1Pane     select-pane \; send-keys -X select-line \; run-shell -d 0.3 \; send-keys -X copy-pipe "xclip -selection clipboard"
bind -T root DoubleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-word ; run-shell -d 0.3 ; send-keys -X copy-pipe "xclip -selection clipboard" }
bind -T root TripleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-line ; run-shell -d 0.3 ; send-keys -X copy-pipe "xclip -selection clipboard" }

bind -T root M-0 select-window -t :0
bind -T root M-1 select-window -t :1
bind -T root M-2 select-window -t :2
bind -T root M-3 select-window -t :3
bind -T root M-4 select-window -t :4
bind -T root M-5 select-window -t :5
bind -T root M-6 select-window -t :6
bind -T root M-7 select-window -t :7
bind -T root M-8 select-window -t :8
bind -T root M-9 select-window -t :9

bind  c  new-window      -c "#{pane_current_path}"
bind  %  split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind m last-window

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

set -g window-status-format '#[bg=colour237,fg=#f8f8f2] #I.#(pwd="#{pane_current_path}"; echo ${pwd####*/}): #W#F '
set -g window-status-current-format '#[bg=colour39,fg=black] #I.#(pwd="#{pane_current_path}"; echo ${pwd####*/}): #W#F '

set -g status-left-length 40
set -g status-right-length 60
set -g status-position bottom
set -g status-fg white
set -g status-bg "colour234"
set -g status-left '#[fg=colour235,bg=colour252,bold] #S Â» #I #P '
set -g status-right '#[bg=colour252,fg=colour235,bold] %Y-%m-%d %H:%M:%S #[default]'

